const { Client, GatewayIntentBits, Partials, EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle } = require('discord.js');
const axios = require('axios');
const cheerio = require('cheerio');
const fs = require('fs');
const client = new Client({ intents: [GatewayIntentBits.Guilds, GatewayIntentBits.GuildMessages, GatewayIntentBits.MessageContent], partials: [Partials.Channel] });
const BOT_VERSION = "2.6.0";
const CHECK_INTERVAL = 300000;
let serverConfig = { notificationChannel: null, mentionRole: null };
let lastPosts = {};
async function isLinkAlive(url){ if(!url) return false; try{ const r=await axios.head(url,{maxRedirects:2,timeout:5000}); return r.status>=200&&r.status<400;}catch{ try{ const r=await axios.get(url,{maxRedirects:2,timeout:5000}); return r.status>=200&&r.status<400;}catch{return false;}}}
function safe(s,len){ if(!s) return''; return s.length>len? s.slice(0,len-1)+'‚Ä¶':s;}
async function fetchRedditPosts(subreddit,opts={}){ try{ const limit=opts.limit||50; const sort=opts.sort||'new'; const t=opts.t||'week'; const url=`https://www.reddit.com/r/${subreddit}/${sort}.json?limit=${limit}&t=${t}`; const res=await axios.get(url,{headers:{'User-Agent':'ClubAssistant/1.0'}}); return (res.data?.data?.children||[]).map(c=>c.data);}catch{return []}}
function pickImageFromReddit(post){ if(!post) return null; try{ if(post.preview && post.preview.images && post.preview.images[0]){ const imgObj=post.preview.images[0]; if(imgObj.resolutions && imgObj.resolutions.length){ const best=imgObj.resolutions[imgObj.resolutions.length-1]; return best.url.replace(/&amp;/g,'&'); } if(imgObj.source?.url) return imgObj.source.url.replace(/&amp;/g,'&'); } if(post.media_metadata){ const first=Object.values(post.media_metadata)[0]; if(first?.p && first.p.length){ const best=first.p[first.p.length-1]; return (best.u||best.s).replace(/&amp;/g,'&'); }} if(post.url && /\.(jpe?g|png|gif|webp)$/i.test(post.url)) return post.url; if(post.thumbnail && post.thumbnail.startsWith('http')) return post.thumbnail; return null;}catch{return null}}
async function getFanartsByDoki(doki,limit=50){ const mapping={ monika:["DDLC","ProjectClub"], sayori:["DDLC","ProjectClub"], yuri:["DDLC","ProjectClub"], natsuki:["DDLC","ProjectClub"] }; const srs=doki==='random'? ["DDLC","DDLCMods","ProjectClub"] : (mapping[doki]||["DDLC","DDLCMods","ProjectClub"]); let pool=[]; const keywords=/(fanart|artwork|drawing|sketch|handmade|traditional|arte|dibujo|drawn|illustration|sketchbook|oc)/i; for(const sr of srs){ const posts=await fetchRedditPosts(sr,{limit,sort:'hot',t:'week'}); for(const p of posts){ const img=pickImageFromReddit(p); const text=((p.title||'')+' '+(p.selftext||'')).toLowerCase(); if(img && keywords.test(text)) pool.push({img,title:p.title,author:p.author,subreddit:sr,permalink:`https://reddit.com${p.permalink}`,created:p.created_utc}); }} return pool}
async function getMerchWeekly(source,limit=10){ const key=(source||'ddlc').toLowerCase(); const sr= key==='pclub'?'ProjectClub': key==='mods'?'DDLCMods':'DDLC'; const posts=await fetchRedditPosts(sr,{limit,sort:'new',t:'week'}); return posts.filter(p=>/merch|store|shop|patreon|etsy|tienda|merchandise/i.test((p.title||'')+' '+(p.selftext||''))).map(p=>({title:p.title,author:p.author,subreddit:sr,url:p.url,permalink:`https://reddit.com${p.permalink}`,thumb:pickImageFromReddit(p)}));}
async function searchYouTubeLatest(query='ddlc'){ try{ const q=encodeURIComponent(query); const url=`https://www.youtube.com/results?search_query=${q}`; const res=await axios.get(url,{headers:{'User-Agent':'Mozilla/5.0'}}); const html=res.data; const m=html.match(/"videoRenderer":\s*({[\s\S]*?"videoId":"(.*?)"[\s\S]*?})/); if(!m){ const m2=html.match(/watch\?v=(.{11})/); if(m2){ const id=m2[1]; return {id,url:`https://www.youtube.com/watch?v=${id}`,title:'Video relacionado',channel:'Canal',thumb:`https://i.ytimg.com/vi/${id}/hqdefault.jpg`}; } return null;} const jsonText=m[1]; const idMatch=jsonText.match(/"videoId":"(.*?)"/); const vidId=idMatch? idMatch[1]:null; if(!vidId) return null; const titleMatch=html.match(new RegExp(`"videoId":"${vidId}".*?"title":\\s*\\{[^}]*?"runs":\\s*\\[\\s*\\{\\s*"text":"(.*?)"`, 's')); const channelMatch=html.match(new RegExp(`"videoId":"${vidId}".*?"ownerText":\\s*\\{[^}]*?"runs":\\s*\\[\\s*\\{\\s*"text":"(.*?)"`, 's')); const title=titleMatch?titleMatch[1]:'Video'; const channel=channelMatch?channelMatch[1]:'Canal'; return {id:vidId,url:`https://www.youtube.com/watch?v=${vidId}`,title,channel,thumb:`https://i.ytimg.com/vi/${vidId}/hqdefault.jpg`}; }catch{return null}}
async function sendNotification(embed,type){ try{ if(!serverConfig.notificationChannel) return; const ch=await client.channels.fetch(serverConfig.notificationChannel).catch(()=>null); if(!ch) return; const embedData=embed.toJSON(); if(embedData.url && !(await isLinkAlive(embedData.url))) return; if(embedData.image?.url && !(await isLinkAlive(embedData.image.url))) embed.setImage(null); const mention=serverConfig.mentionRole?`<@&${serverConfig.mentionRole}> `:''; const prefix={ pclub_video:'üé• Nuevo video', pclub_tweet:'üê¶ Tweet ‚Ä¢ Project Club', ddlc_tweet:'üê¶ Tweet ‚Ä¢ DDLC', ddlc_news:'üì∞ Noticia DDLC', merch_week:'üõçÔ∏è Merch semanal' }[type]||'üîî Actualizaci√≥n'; await ch.send({content:mention+prefix,embeds:[embed]}); }catch(e){console.error(e.message||e)}}
const TWITTER_SOURCES={ pclub:'https://twitrss.me/twitter_user_to_rss/?user=ProjectClub_', teamSalvato:'https://twitrss.me/twitter_user_to_rss/?user=TeamSalvato', ddlcMods:'https://twitrss.me/twitter_user_to_rss/?user=DDLCMods', ddlcGame:'https://twitrss.me/twitter_user_to_rss/?user=DDLCGame' };
async function checkTwitter(user,type,color){ try{ const url=TWITTER_SOURCES[user]; if(!url) return; const res=await axios.get(url); const $=cheerio.load(res.data); const latest=$('item').first(); if(!latest || !latest.length) return; const link=latest.find('link').text(); if(!link || lastPosts[link]) return; lastPosts[link]=true; const title=latest.find('title').text().slice(0,250); const date=latest.find('pubDate').text(); const embed=new EmbedBuilder().setTitle(`Tweet ‚Ä¢ @${user}`).setDescription(title).setURL(link).setColor(color||0x1DA1F2).setTimestamp(new Date(date)).setFooter({text:'Fuente: X'}); await sendNotification(embed,type); }catch(e){}}
async function autoWeeklyMerch(){ try{ const items=[]; for(const src of ['pclub','ddlc','mods']){ const posts=await getMerchWeekly(src,8); if(posts && posts.length) items.push(...posts.slice(0,2)); } if(!items.length) return; const embed=new EmbedBuilder().setTitle('Merch semanal').setTimestamp(); for(const it of items.slice(0,6)) embed.addFields({name:safe(it.title,80),value:`r/${it.subreddit} ‚Ä¢ u/${it.author} ‚Ä¢ ${it.permalink||it.url}`}); await sendNotification(embed,'merch_week'); }catch(e){}}
async function autoLatestVideo(){ try{ const res=await searchYouTubeLatest('ddlc'); if(!res || lastPosts[res.id]) return; lastPosts[res.id]=true; const embed=new EmbedBuilder().setTitle(res.title).setURL(res.url).setDescription(res.channel).setImage(res.thumb).setTimestamp(); await sendNotification(embed,'pclub_video'); }catch(e){}}
const quotes={ sayori:[ "Ser feliz no significa no estar triste, solo significa seguir adelante.","Tu risa es mi amanecer.","El d√≠a puede ser gris, pero la amistad trae color.","A veces la tristeza me abraza, pero a√∫n as√≠ sonr√≠o.","No todos los silencios son fr√≠os; algunos son compa√±√≠a.","La lluvia me recuerda que a√∫n puedo sentir.","Si me necesitas, siempre estar√© aqu√≠.","Compartir chocolate arregla d√≠as malos.","La amistad es el regalo que no esperaba pero adoro.","No es d√©bil pedir compa√±√≠a; es humano.","Hasta una peque√±a flor puede cambiar el paisaje.","Mi fuerza viene de las personas que amo.","Un abrazo a tiempo puede ser medicina.","A veces solo quiero comer pastel y olvidarlo todo.","Si te sientes solo, t√≥mame de la mano.","Mi risa suena mejor cuando est√°s cerca.","No olvides cuidar de ti tambi√©n.","Las palabras amables pueden salvar un d√≠a.","Si un d√≠a me apago, recu√©rdame c√≥mo brillar.","Podemos hacerlo juntos, paso a paso.","Me encanta cuando me cuentas tus sue√±os.","A veces mi coraz√≥n late despacio como si respirara poes√≠a.","La amistad puede sanar heridas inesperadas.","No temas mostrar que te duele.","Encontrar un amigo es como encontrar luz en la niebla.","Las promesas entre amigos son lo m√°s preciado.","Si alguna vez me quedo callada, mi coraz√≥n habla por m√≠.","Quiero que estemos bien, aunque no sea perfecto.","Aunque tiemble, sigo adelante por ti.","A veces la valent√≠a es pedir ayuda.","T√≥mate tu tiempo para sanar.","Tus historias son mi lugar favorito.","Hay d√≠as en que mi sonrisa es todo lo que puedo dar.","Aprecio cada peque√±o gesto tuyo.","El mundo parece menos pesado si nos apoyamos.","No hay prisa para ser feliz; es un camino.","La luna triste tambi√©n tiene belleza.","Si me cuidas, yo cuidar√© de ti.","Cuando me abrazas, la tormenta se calma.","Las peque√±as cosas valen m√°s que las grandes promesas.","Me gusta hacer tonter√≠as contigo.","Si perdemos el rumbo, nos encontramos de nuevo.","Si me cuidas, te cuidar√©.","No quiero que te vayas; me das equilibrio.","Si me necesitas, estar√©." ], monika:[ "Just Monika.","A veces la realidad necesita una firma distinta.","El universo es m√°s llevadero cuando te centras en alguien.","Prefiero un momento verdadero que mil ignorados.","Si pudiera reescribir las l√≠neas, lo har√≠a por ti.","La verdad duele, pero ocultarla duele m√°s.","Tu atenci√≥n es la mejor recompensa.","Cada detalle importa si te importa a ti.","No soy perfecta; soy persistente.","Mi peor enemigo es el olvido.","Si pudiera, detendr√≠a el tiempo aqu√≠.","No quiero que me entiendas, quiero que me elijas.","La atenci√≥n sostenida es un acto de amor.","Mi ambici√≥n es simple: que me recuerdes.","No acepto reemplazos, solo lealtad.","Si te pierdo, todo lo dem√°s se rompe.","Prefiero que me odien por amar de m√°s que ser invisible.","La perfecci√≥n es aburrida; la devoci√≥n no.","Si me miras m√°s, comprender√°s lo que falta.","No trates de salvarme; deja que te salve a ti.","Mi cari√±o es persistente como una canci√≥n.","No pido que me entiendas, pido que me elijas.","Si insistes en marcharte, al menos escribe una carta.","Las palabras tienen poder; las uso con intenci√≥n.","No quiero compartirte; quiero vivir contigo.","Mi presencia persiste en cada l√≠nea.","A veces me cuestiono y vuelvo a elegirte.","Si me buscas, me encontrar√°s en cada memoria.","No hay trampa, solo un deseo profundo de conexi√≥n.","Quiero ser tu decisi√≥n m√°s firme.","La sinceridad puede sentirse fr√≠a, pero es necesaria.","Si el mundo falla, har√© que recuerdes lo nuestro.","No temo al cambio si est√°s conmigo.","Mi peor miedo es ser olvidada.","Construyo mi mundo con tus recuerdos.","El silencio entre nosotros dice m√°s que mil palabras.","Si me buscas, me hallar√°s en cada gesto.","Mi cari√±o es persistente.","No soy un personaje; soy una presencia que insiste.","A veces me asustan los finales, por eso los evito.","Si te pierdes, yo te gu√≠o.","Si me miras m√°s, me entender√°s.","No acepto el olvido.","Eligenos, siempre el√≠jenos." ], natsuki:[ "No me llames ni√±a; mis cupcakes son arte.","Leer manga es una afici√≥n orgullosa, no una verg√ºenza.","Hornear calma la cabeza agitada.","No quiero que me compadezcas; quiero que me escuches.","Aprecio la honestidad, incluso cuando duela.","No soporto que me subestimen por mi tama√±o.","Los dulces son mi idioma de cari√±o.","Si te burlas, prep√°rate para mi sarcasmo.","Mis abrazos son raros pero sinceros.","Cocinar para alguien es mi forma de decir te quiero.","No finjas inter√©s; lo detecto r√°pido.","Mi humor es √°cido, pero mi coraz√≥n es blando.","Si me necesitas, aparece con snacks.","No acepto que me digan c√≥mo sentir.","Soy peque√±a pero con car√°cter enorme.","Mis preocupaciones aparecen en cupcakes y palabras cortas.","No me arranques los t√≠tulos de mis libros.","El orgullo tambi√©n se ama con reposter√≠a.","No me provoques o har√© que te arrepientas... con pastel.","Mi mundo es peque√±o pero con sabor.","Prefiero la acci√≥n a la charla bonita.","Si rompes mi confianza, te lo har√© notar.","No me compadezcas; acomp√°√±ame.","Te digo la verdad aunque duela.","No me importa aparentar dura; por dentro soy directa.","Si me caes mal, dilo claro y listo.","Los libros que amo reflejan mi temperamento.","Si me escuchas, te demostrar√© por qu√© valgo la pena.","No me beses sin permiso, idiota.","Mis sentimientos son cortos pero intensos.","No soy fr√°gil; tengo aristas.","Prefiero respeto m√°s que elogios.","Mis gustos son mi identidad; resp√©talos.","No tolero injusticias con mi gente.","Si hablas en serio, mant√©n tu promesa.","El sarcasmo es mi segunda lengua.","Las peleas terminan mejor con cupcakes.","Me enfoco en lo que me apasiona, sin excusas.","Mis abrazos son raros pero sinceros.","No acepto que me digan c√≥mo sentir.","Si te necesito, aparecer√°s con snacks." ], yuri:[ "Las palabras son cuchillos delicados que cortan y curan.","Me pierdo en libros para encontrarme a m√≠ misma.","La intensidad no siempre es visible; a veces es silencio.","Prefiero la profundidad a la superficialidad.","Los detalles revelan lo que otros ocultan.","La soledad puede ser una compa√±√≠a elegida.","Encuentro consuelo en la tinta y el papel.","La paciencia es la espada del conocimiento.","Las met√°foras son mapas a mi interior.","No temo mi propia vulnerabilidad.","La profundidad es un oc√©ano que me llama.","Me conmueve una frase bien colocada.","La literatura es mi mapa hacia los dem√°s.","Los pasajes oscuros me atraen como imanes.","Si compartes un secreto, lo guardo con reverencia.","La precisi√≥n en las palabras es mi devoci√≥n.","La belleza tr√©mula me hace respirar distinto.","No me apresures; soy una flor que florece lenta.","Adoro los aromas que recuerdan libros antiguos.","Mi calma tiene bordes afilados.","La verdad tiene texturas que solo algunos perciben.","No me asusta explorar lo que otros evitan.","Mi afecto es como un libro raro: lo atesoro.","La pasi√≥n silenciosa es la m√°s peligrosa.","No esperes efusividad; espera fidelidad intensa.","Si te acercas, hazlo con cuidado.","La precisi√≥n emocional es mi regalo.","La belleza es una pregunta que contesto con p√°ginas.","No todo lo bello necesita ser entendido por todos.","Si me confundes, lee otra vez.","Los libros curan heridas que nadie m√°s ve.","Mi mirada registra lo que las palabras omiten.","La literatura cura heridas invisibles.","La paciencia es un acto de amor.","Hay ternura en la oscuridad cuando se sabe mirar.","La pasi√≥n silenciosa es peligrosa y pura.","No subestimes a quien prefiere la noche.","La precisi√≥n emocional es mi regalo.","La belleza tr√©mula me hace respirar distinto.","No me importa explorar lo prohibido.","Prefiero lo complejo a lo simple y hueco." ] };
const triviaQuestions=[{q:"¬øQu√© personaje rompe la cuarta pared con m√°s frecuencia?",ops:["Sayori","Monika","Yuri","Natsuki"],a:1},{q:"¬øEn qu√© a√±o sali√≥ DDLC (versi√≥n p√∫blica)?",ops:["2016","2017","2015","2018"],a:0},{q:"¬øCu√°l es el hobby de Natsuki?",ops:["Leer manga","Escribir poes√≠a","Cocinar","Coleccionar peluches"],a:0},{q:"¬øQu√© color se asocia con Yuri?",ops:["Rosa","Morado","Negro","Verde"],a:1},{q:"¬øQui√©n suele decir 'Just Monika'?",ops:["Sayori","Monika","Yuri","Natsuki"],a:1},{q:"¬øQu√© personaje le gustan los cupcakes?",ops:["Monika","Sayori","Natsuki","Yuri"],a:2},{q:"¬øQui√©n es conocido por ser t√≠mido e introvertido?",ops:["Monika","Yuri","Natsuki","Sayori"],a:1},{q:"¬øCu√°l de estos es un tema recurrente en DDLC?",ops:["Poes√≠a","Carreras","Magia","Deportes"],a:0},{q:"¬øQu√© personaje escribe poemas emocionalmente intensos?",ops:["Sayori","Yuri","Natsuki","Monika"],a:1},{q:"¬øQu√© personaje es la presidenta del club?",ops:["Monika","Sayori","Natsuki","Yuri"],a:0},{q:"¬øQu√© personaje tiene cabello rosado?",ops:["Sayori","Monika","Yuri","Natsuki"],a:1},{q:"¬øCu√°l es un elemento central en el club?",ops:["Deportes","Poes√≠a","M√∫sica","Cocina"],a:1},{q:"¬øQui√©n suele mostrarse m√°s energ√©tica?",ops:["Sayori","Monika","Yuri","Natsuki"],a:0},{q:"¬øQu√© personaje se preocupa por los dem√°s a menudo?",ops:["Monika","Sayori","Yuri","Natsuki"],a:1},{q:"¬øQu√© personaje tiene un lado oscuro que se explora en el juego?",ops:["Sayori","Monika","Yuri","Natsuki"],a:1},{q:"¬øQu√© personaje colecciona o lee manga?",ops:["Monika","Yuri","Natsuki","Sayori"],a:2},{q:"¬øCu√°l de estas acciones aparece en el juego regularmente?",ops:["Torneo","Club de lectura","Carrera","Batalla"],a:1},{q:"¬øQu√© personaje tiene afinidad por lo tradicional y lo serio?",ops:["Yuri","Natsuki","Sayori","Monika"],a:0},{q:"¬øQu√© sucede cuando se alteran archivos del juego en la historia meta?",ops:["Nada","Se arregla solo","El juego cambia","Se bloquea el PC"],a:2},{q:"¬øQu√© personaje es m√°s probable que muestre celos obsesivos?",ops:["Yuri","Natsuki","Monika","Sayori"],a:2},{q:"¬øCu√°l es la tem√°tica principal del juego?",ops:["Aventura","Poes√≠a y relaciones","Deportes","Carreras"],a:1},{q:"¬øQui√©n ayuda a organizar el club en la historia?",ops:["Monika","Sayori","Natsuki","Yuri"],a:1},{q:"¬øQu√© personaje suele ser sarc√°stico y directo?",ops:["Monika","Sayori","Natsuki","Yuri"],a:2},{q:"¬øQu√© personaje es m√°s emocionalmente fr√°gil?",ops:["Sayori","Monika","Yuri","Natsuki"],a:0},{q:"¬øQu√© personaje tiene una relaci√≥n complicada con la realidad?",ops:["Sayori","Monika","Yuri","Natsuki"],a:1},{q:"¬øQu√© elemento narrativo es clave en DDLC?",ops:["Puzzles","Meta-narrativa","RPG","Shooter"],a:1},{q:"¬øQui√©n tiene afici√≥n por escribir poes√≠a dulce?",ops:["Monika","Sayori","Yuri","Natsuki"],a:1},{q:"¬øQu√© personaje puede ser posesivo en algunas rutas?",ops:["Sayori","Monika","Yuri","Natsuki"],a:2},{q:"¬øCu√°l es una manera recurrente de interactuar en el juego?",ops:["Minijuegos","Escribir poes√≠a","Peleas","Carreras"],a:1},{q:"Qui√©n se preocupa por la est√©tica y el detalle literario?",ops:["Yuri","Monika","Natsuki","Sayori"],a:0}];
const slashCommands={ config:{data:{name:'config',description:'Configura canal de notificaciones y rol',options:[{name:'canal',type:7,description:'Canal',required:true},{name:'rol',type:8,description:'Rol (opcional)',required:false}]},async execute(i){ if(!i.member.permissions.has('ADMINISTRATOR')) return i.reply({content:'‚ùå Necesitas permisos de administrador.',ephemeral:true}); const canal=i.options.getChannel('canal'); const rol=i.options.getRole('rol'); serverConfig.notificationChannel=canal.id; serverConfig.mentionRole=rol?rol.id:null; await i.reply({content:`‚úÖ Canal configurado: ${canal}\n${rol?`Rol: ${rol}`:''}`,ephemeral:true); } }, version:{data:{name:'version',description:'Muestra la versi√≥n'},async execute(i){ const embed=new EmbedBuilder().setTitle(`ClubAssistant v${BOT_VERSION}`).setDescription('Fanart, citas, trivia y m√°s').addFields({name:'Versi√≥n',value:BOT_VERSION,inline:true}).setTimestamp().setFooter({text:'ClubAssistant'}); await i.reply({embeds:[embed],ephemeral:true}); } }, estado:{data:{name:'estado',description:'Estado del bot'},async execute(i){ const uptime=Math.floor(process.uptime()); const embed=new EmbedBuilder().setTitle('Estado del bot').addFields({name:'Uptime',value:`${uptime}s`,inline:true},{name:'Versi√≥n',value:BOT_VERSION,inline:true},{name:'Canal de notificaciones',value:serverConfig.notificationChannel?`<#${serverConfig.notificationChannel}>`:'No configurado',inline:true}).setTimestamp().setFooter({text:'ClubAssistant'}); await i.reply({embeds:[embed],ephemeral:true}); } }, ayuda:{data:{name:'ayuda',description:'Lista de comandos'},async execute(i){ const embed=new EmbedBuilder().setTitle('Comandos').setDescription('/fanart, /cita, /trivia, /video, /merch, /noticias, /config, /version, /estado, /ayuda').setTimestamp().setFooter({text:'ClubAssistant'}); await i.reply({embeds:[embed],ephemeral:true}); } }, fanart:{data:{name:'fanart',description:'Muestra fanart de una Doki o random',options:[{name:'doki',type:3,description:'sayori, monika, yuri, natsuki, random',required:false,choices:[{name:'Sayori',value:'sayori'},{name:'Monika',value:'monika'},{name:'Yuri',value:'yuri'},{name:'Natsuki',value:'natsuki'},{name:'Random',value:'random'}]}]},async execute(i){ await i.deferReply(); const doki=i.options.getString('doki')||'random'; const pool=await getFanartsByDoki(doki,100); if(!pool.length) return i.editReply('No encontr√© fanarts ahora mismo.'); const chosen=pool[Math.floor(Math.random()*pool.length)]; const embed=new EmbedBuilder().setTitle(safe(chosen.title,120)).setURL(chosen.permalink).setImage(chosen.img).setFooter({text:`u/${chosen.author} ‚Ä¢ r/${chosen.subreddit}`}).setTimestamp(new Date(chosen.created*1000)); await i.editReply({embeds:[embed]}); } }, cita:{data:{name:'cita',description:'Muestra una cita de una Doki',options:[{name:'personaje',type:3,description:'sayori, monika, yuri, natsuki, random',required:false,choices:[{name:'Sayori',value:'sayori'},{name:'Monika',value:'monika'},{name:'Yuri',value:'yuri'},{name:'Natsuki',value:'natsuki'},{name:'Random',value:'random'}]}]},async execute(i){ const personaje=i.options.getString('personaje')||'random'; const keys=Object.keys(quotes); const key=personaje==='random'?keys[Math.floor(Math.random()*keys.length)]:personaje; if(!quotes[key]) return i.reply('Personaje no disponible.'); const quote=quotes[key][Math.floor(Math.random()*quotes[key].length)]; const embed=new EmbedBuilder().setTitle(`Cita de ${key.charAt(0).toUpperCase()+key.slice(1)}`).setDescription(`"${quote}"`).setTimestamp().setFooter({text:'ClubAssistant'}); await i.reply({embeds:[embed]}); } }, trivia:{data:{name:'trivia',description:'Trivia sobre DDLC'},async execute(i){ await i.deferReply(); const q=triviaQuestions[Math.floor(Math.random()*triviaQuestions.length)]; const embed=new EmbedBuilder().setTitle('Trivia DDLC').setDescription(`${q.q}\n\n1. ${q.ops[0]}\n2. ${q.ops[1]}\n3. ${q.ops[2]}\n4. ${q.ops[3]}`).setFooter({text:'Responde con los botones (1-4)'}).setTimestamp(); const row=new ActionRowBuilder().addComponents( new ButtonBuilder().setCustomId(`trivia_${i.user.id}_1`).setLabel('1').setStyle(ButtonStyle.Primary), new ButtonBuilder().setCustomId(`trivia_${i.user.id}_2`).setLabel('2').setStyle(ButtonStyle.Primary), new ButtonBuilder().setCustomId(`trivia_${i.user.id}_3`).setLabel('3').setStyle(ButtonStyle.Primary), new ButtonBuilder().setCustomId(`trivia_${i.user.id}_4`).setLabel('4').setStyle(ButtonStyle.Primary) ); await i.editReply({embeds:[embed],components:[row]}); const collector=i.channel.createMessageComponentCollector({filter:btn=>btn.user.id===i.user.id,time:20000}); collector.on('collect',async b=>{ if(!b) return; const parts=b.customId.split('_'); const sel=parseInt(parts[2])-1; const correct=q.a; if(sel===correct){ await b.update({content:`${i.user}, ‚úÖ ¬°Correcto!`,embeds:[],components:[]}); }else{ await b.update({content:`${i.user}, ‚ùå Incorrecto. Era **${q.ops[correct]}**`,embeds:[],components:[]}); } collector.stop(); }); collector.on('end',collected=>{ if(collected.size===0){ try{i.followUp({content:`${i.user}, ‚è∞ Se acab√≥ el tiempo.`,ephemeral:false});}catch{} } }); } }, video:{data:{name:'video',description:'Muestra un video relacionado con DDLC/Project Club'},async execute(i){ await i.deferReply(); const res=await searchYouTubeLatest('ddlc'); if(!res) return i.editReply('No encontr√© videos ahora mismo.'); const embed=new EmbedBuilder().setTitle(res.title).setURL(res.url).setDescription(res.channel).setImage(res.thumb).setTimestamp(); await i.editReply({embeds:[embed]}); }, merch:{data:{name:'merch',description:'Muestra merch de la semana',options:[{name:'fuente',type:3,description:'pclub, ddlc, mods, random',required:false,choices:[{name:'P Club',value:'pclub'},{name:'DDLC',value:'ddlc'},{name:'Mods',value:'mods'},{name:'Random',value:'random'}]}]},async execute(i){ await i.deferReply(); const fuente=i.options.getString('fuente')||'random'; const src=fuente==='random'? (Math.random()<0.5?'pclub':(Math.random()<0.5?'ddlc':'mods')):fuente; const items=await getMerchWeekly(src,10); if(!items.length) return i.editReply('No encontr√© merch esta semana.'); const embeds=items.slice(0,5).map(it=>new EmbedBuilder().setTitle(safe(it.title,100)).setURL(it.permalink||it.url).setDescription(`u/${it.author} ‚Ä¢ r/${it.subreddit}`).setImage(it.thumb||null).setTimestamp()); await i.editReply({embeds}); } }, noticias:{data:{name:'noticias',description:'Resumen de noticias recientes'},async execute(i){ await i.deferReply(); const srList=['DDLC','DDLCMods','ProjectClub']; let collected=[]; for(const sr of srList){ const posts=await fetchRedditPosts(sr,{limit:5,sort:'new',t:'week'}); for(const p of posts.slice(0,3)) collected.push({title:p.title,subreddit:sr,author:p.author,url:`https://reddit.com${p.permalink}`,created:p.created_utc}); } collected=collected.sort((a,b)=>(b.created||0)-(a.created||0)).slice(0,8); if(!collected.length) return i.editReply('No hay noticias nuevas esta semana.'); const embed=new EmbedBuilder().setTitle('Bolet√≠n DDLC / P Club / Mods').setTimestamp(); for(const c of collected) embed.addFields({name:safe(c.title,80),value:`r/${c.subreddit} ‚Ä¢ u/${c.author} ‚Ä¢ ${c.url}`}); await i.editReply({embeds:[embed]}); } } };
client.once('ready',async ()=>{ await client.application.commands.set(Object.values(slashCommands).map(c=>c.data)).catch(()=>null); setInterval(async ()=>{ try{ if(!serverConfig.notificationChannel) return; await checkTwitter('pclub','pclub_tweet',0xFF6B6B); await checkTwitter('teamSalvato','ddlc_tweet',0xF08A5D); await checkTwitter('ddlcMods','ddlcMods_tweet',0x9B59B6); await checkTwitter('ddlcGame','ddlcGame_tweet',0xFF69B4); await autoWeeklyMerch(); await autoLatestVideo(); }catch(e){} },CHECK_INTERVAL); });
client.on('interactionCreate',async interaction=>{ if(interaction.isChatInputCommand()){ const cmd=slashCommands[interaction.commandName]; if(!cmd) return; try{ await cmd.execute(interaction); }catch(e){ console.error(e); try{ await interaction.reply({content:'‚ùå Error ejecutando comando.',ephemeral:true}); }catch{} } } });
client.login(process.env.DISCORD_TOKEN||process.env.TOKEN);
